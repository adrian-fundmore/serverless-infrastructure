{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for a VPC",
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsSupport": true,
        "EnableDnsHostnames": true,
        "InstanceTenancy": "default",
        "Tags": [{
          "Key": "Name",
          "Value": "10.0.0.0/16"
        }]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [{
          "Key": "Name",
          "Value": "10.0.0.0/16"
        }]
      }
    },
    "VPCGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "InternetGatewayId": {"Ref": "InternetGateway"}
      }
    },
    "SubnetAPublic": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {"Fn::Select": ["0", {"Fn::GetAZs": ""}]},
        "CidrBlock": "10.0.0.0/20",
        "MapPublicIpOnLaunch": true,
        "VpcId": {"Ref": "VPC"},
        "Tags": [{
          "Key": "Name",
          "Value": "A public"
        }, {
          "Key": "Reach",
          "Value": "public"
        }]
      }
    },
    "SubnetAPrivate": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {"Fn::Select": ["0", {"Fn::GetAZs": ""}]},
        "CidrBlock": "10.0.16.0/20",
        "VpcId": {"Ref": "VPC"},
        "Tags": [{
          "Key": "Name",
          "Value": "A private"
        }, {
          "Key": "Reach",
          "Value": "private"
        }]
      }
    },
    "SubnetBPublic": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {"Fn::Select": ["1", {"Fn::GetAZs": ""}]},
        "CidrBlock": "10.0.32.0/20",
        "MapPublicIpOnLaunch": true,
        "VpcId": {"Ref": "VPC"},
        "Tags": [{
          "Key": "Name",
          "Value": "B public"
        }, {
          "Key": "Reach",
          "Value": "public"
        }]
      }
    },
    "SubnetBPrivate": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {"Fn::Select": ["1", {"Fn::GetAZs": ""}]},
        "CidrBlock": "10.0.48.0/20",
        "VpcId": {"Ref": "VPC"},
        "Tags": [{
          "Key": "Name",
          "Value": "B private"
        }, {
          "Key": "Reach",
          "Value": "private"
        }]
      }
    },
    "RouteTableAssociationAPublic": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {"Ref": "SubnetAPublic"},
        "RouteTableId": {"Ref": "RouteTablePublic"}
      }
    },
    "RouteTableAssociationAPrivate": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {"Ref": "SubnetAPrivate"},
        "RouteTableId": {"Ref": "RouteTablePrivate"}
      }
    },
    "RouteTableAssociationBPublic": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {"Ref": "SubnetBPublic"},
        "RouteTableId": {"Ref": "RouteTablePublic"}
      }
    },
    "RouteTableAssociationBPrivate": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {"Ref": "SubnetBPrivate"},
        "RouteTableId": {"Ref": "RouteTablePrivate"}
      }
    },
    "SubnetNetworkAclAssociationAPublic": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {"Ref": "SubnetAPublic"},
        "NetworkAclId": {"Ref": "NetworkAclPublic"}
      }
    },
    "SubnetNetworkAclAssociationAPrivate": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {"Ref": "SubnetAPrivate"},
        "NetworkAclId": {"Ref": "NetworkAclPrivate"}
      }
    },
    "SubnetNetworkAclAssociationBPublic": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {"Ref": "SubnetBPublic"},
        "NetworkAclId": {"Ref": "NetworkAclPublic"}
      }
    },
    "SubnetNetworkAclAssociationBPrivate": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {"Ref": "SubnetBPrivate"},
        "NetworkAclId": {"Ref": "NetworkAclPrivate"}
      }
    },
    "RouteTablePublic": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "Tags": [{
          "Key": "Name",
          "Value": "Public"
        }]
      }
    },
    "RouteTablePrivate": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "Tags": [{
          "Key": "Name",
          "Value": "Private"
        }]
      }
    },
    "RouteTablePublicInternetRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "VPCGatewayAttachment",
      "Properties": {
        "RouteTableId": {"Ref": "RouteTablePublic"},
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {"Ref": "InternetGateway"}
      }
    },
    "NetworkAclPublic": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "Tags": [{
          "Key": "Name",
          "Value": "Public"
        }]
      }
    },
    "NetworkAclPrivate": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "Tags": [{
          "Key": "Name",
          "Value": "Private"
        }]
      }
    },
    "NetworkAclEntryInPublicAllowAll": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "NetworkAclPublic"},
        "RuleNumber": "99",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0"
      }
    },
    "NetworkAclEntryOutPublicAllowAll": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "NetworkAclPublic"},
        "RuleNumber": "99",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0"
      }
    },
    "NetworkAclEntryInPrivateAllowVPC": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "NetworkAclPrivate"},
        "RuleNumber": "99",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0"
      }
    },
    "NetworkAclEntryOutPrivateAllowVPC": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "NetworkAclPrivate"},
        "RuleNumber": "99",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0"
      }
    },
    "LambdaExecSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties" : {
            "GroupDescription": "Lambda functions execute with this group",
            "VpcId": {"Ref": "VPC"},
            "Tags" :  [{
              "Key": "Name",
              "Value": "LambdaExecSecurityGroup"
            }]
        }
    }
  },
  "Outputs": {
    "VPC": {
      "Description": "VPC.",
      "Value": {"Ref": "VPC"}
    },
    "SubnetAPublic": {
      "Description": "Subnet A public.",
      "Value": {"Ref": "SubnetAPublic"}
    },
    "SubnetAPrivate": {
      "Description": "Subnet A private.",
      "Value": {"Ref": "SubnetAPrivate"}
    },
    "SubnetBPublic": {
      "Description": "Subnet B public.",
      "Value": {"Ref": "SubnetBPublic"}
    },
    "SubnetBPrivate": {
      "Description": "Subnet B private.",
      "Value": {"Ref": "SubnetBPrivate"}
    },
    "RouteTablePrivate": {
      "Description": "Route table private.",
      "Value": {"Ref": "RouteTablePrivate"}
    },
    "RouteTablePublic": {
      "Description": "Route table public.",
      "Value": {"Ref": "RouteTablePublic"}
    },
    "LambdaExecSecurityGroup": {
      "Description": "Route table public.",
      "Value": {"Ref": "LambdaExecSecurityGroup"}
    }
  }
}
